include required(classpath("application"))
backend {
  default = Volcano

  providers {
    Volcano {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
            Int runtime_minutes = 600
            Int cpus = 1
            String memorys = "512MB"
            String dockerImage = "ubuntu:latest"
            String job_template = "/app/k8s-job-template.yaml"
        """
        submit = """
            name=${"`echo "+job_name+"|awk -F '_' '{print tolower($3)}'`"}
            uid=${"`echo $(cat /dev/urandom | od -x | head -1 | awk '{print $2$3\"\"$4$5\"\"$6$7\"\"$8$9}')`"}
            jobName=${"`echo $name-$uid`"}
            execDir=$(cd `dirname $0`; pwd)
            workflowDir=${"`dirname "+cwd+"`"}
            cat ${job_template} > ${script}.yaml
                sed -i "s@JOB_NAME@$jobName@g" ${script}.yaml && \
                sed -i "s@WORKFLOW_DIR@$workflowDir@g" ${script}.yaml && \
                sed -i "s@EXECUTION_DIR@$execDir@g" ${script}.yaml && \
                sed -i "s@CPUS@${cpus}@g" ${script}.yaml && \
                sed -i "s@C_IMAGE@${dockerImage}@g" ${script}.yaml && \
                sed -i "s@MEMORYS@${memorys}@g" ${script}.yaml && \
            kubectl apply -f ${script}.yaml
        """
        kill = "kubectl delete job ${job_id}"
        check-alive = "kubectl get job ${job_id} --no-headers"
        job-id-regex = "job.batch/(.+) created"
        exit-code-timeout-seconds = 259200
      }
    }
}
}